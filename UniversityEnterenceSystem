package StudentPlacementToUniversity;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class UniEntrSys {

	public static void main(String[] args) {

		System.out.println("\r\n" + "   ____ __          ___   __               \r\n"
				+ "  / __// /_ __ __  / _ \\ / /___ _ ____ ___ \r\n"
				+ " _\\ \\ / __// // / / ___// // _ `// __// -_)\r\n"
				+ "/___/ \\__/ \\_,_/ /_/   /_/ \\_,_/ \\__/ \\__/ \r\n"
				+ "                                           \r\n" + "");
//Universities-----------------------------------------------------------------------------------------
		String university[][] = { { "Oxford University", "OXF" }, { "Cambridge University", "CAM" },
				{ "London University", "LON" } };

		int univCount = university.length;

		int[] univCapacity = new int[univCount];

		Scanner in = new Scanner(System.in);

		for (int i = 0; i < univCount; i++) {
			System.out.println("Please enter " + university[i][0] + " capacity: ");

			try {
				int enteredUnivCap = in.nextInt();
				if (enteredUnivCap > 0) {
					univCapacity[i] = enteredUnivCap;
				} else {
					throw new ArithmeticException();
				}
			}

			catch (InputMismatchException | ArithmeticException ime) {
				System.out.println("Not a Positive Integer");
				in.nextLine();
				i--;
			}
		}
//Prompt-----------------------------------------------------------------------------------------
		in.nextLine();

		System.out.println("Enter students information now?: 'y' to accept; or 'n' to quit:");

		while (in.hasNextLine()) {

			String prompt = in.nextLine().trim();

			if (prompt.equalsIgnoreCase("y")) {
//Students-----------------------------------------------------------------------------------------				
				System.out.println("===Now Input Students Details===");

				List<Student> students = new ArrayList<Student>();

				int i = 0;
				boolean newRecord = true;

				do {
					try {

						Student student = new UniEntrSys().new Student(); // since I have created a nested class i need
																			// to call
																			// outer class fir
						student.setSId(i + 1);

						System.out.println("Enter " + "\"First Name\"" + " for Student iD: " + student.getSId());
						student.setFnm(in.nextLine());
						System.out.println("Enter " + "\"Last Name\"" + " for Student iD: " + student.getSId());
						student.setLnm(in.nextLine().toUpperCase());
						System.out.println("Enter " + "\"Quantitative Answers\"" + " for Student iD: " + student.getSId());
						student.setQtt(in.nextLine().toUpperCase());
						System.out.println("Enter " + "\"Verbal Answers\"" + " for Student iD: " + student.getSId());
						student.setVrb(in.nextLine().toUpperCase());
						System.out.println("Enter " + "\"University Preferences\""+ " for Student iD:"+ student.getSId() );
						System.out.println("-please use 3 Letter University Codes");
						System.out.println("----------------------");
						for (int j = 0; j < univCount; j++) {
							System.out.println(university[j][0]+" : " + university[j][1]);
							System.out.println("----------------------");
						}
						
						
							String[] uniPrefs = new String[3];
							System.out.println("1st: ");
							uniPrefs[0] = in.nextLine().toUpperCase();
							System.out.println("2st: ");
							uniPrefs[1] = in.nextLine().toUpperCase();
							System.out.println("3st: ");
							uniPrefs[2] = in.nextLine().toUpperCase();

				        student.setUniPref(uniPrefs);

						students.add(student);
					} catch (InputMismatchException ime) {

					}

					System.out.print("Add more Student?(y/n)");
					String askNew = in.nextLine();
					newRecord = (askNew.toLowerCase().equals("y")) ? true : false;

					i++;

				} while (newRecord == true);
				
				System.out.println("===Entered Students Details===");
				
//				for (int j = 0; j <uniPrefs.length; ++j) {
//		            System.out.println(uniPrefs[j]);
//		        }
				
				students.forEach(user -> {
					System.out.println(
							"Student Id: " + user.getSId() +
							"   Full Name : " + user.getFnm() +
							" " + user.getLnm() +
							" Quant. Ans: " + user.getQtt() +
							" Verb. Ans: " + user.getVrb() +
							" Uni. Pref.: " + user.getUniPref()					// Fix array print
							);
				});

			} else if (prompt.equalsIgnoreCase("n")) {
				System.out.println("Thank you, Maybe next time");
				System.exit(0);
			} else {
				System.out.println("Invalid character");

			}

		}

		in.close();
	}

	class Student {
		// fields (variables in a class)
		private int stuId;
		private String firstName;
		private String lastName;
		private String quantitative;
		private String verbal;
		private String[] uniPref;

		// Constructor method, Declaration of Class

		public Student() {
		}

		// Setters and getters methods

		public int getSId() {
			return stuId;
		}

		public void setSId(int sId) {
			this.stuId = sId;
		}

		public String getFnm() {
			return firstName;
		}

		public void setFnm(String fName) {
			this.firstName = fName;
		}

		public String getLnm() {
			return lastName;
		}

		public void setLnm(String lName) {
			this.lastName = lName;
		}

		public String getQtt() {
			return quantitative;
		}

		public void setQtt(String qtt) {
			quantitative = qtt;
		}

		public String getVrb() {
			return verbal;
		}

		public void setVrb(String vrb) {
			verbal = vrb;
		}

		public String[] getUniPref() {
			return uniPref;
		}

		public void setUniPref(String[] uniPref) {
			this.uniPref = uniPref;
		}

	}

}
